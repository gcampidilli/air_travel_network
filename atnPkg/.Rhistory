library('usethis')
devtools::load_all()
devtools::document()
devtools::load_all()
library(atnPkg)
use_testthat()
devtools::load_all()
devtools::test()
devtools::document()
devtools::run_examples()
library(atnPkg)
?complete.cases
devtools::load_all()
devtools::load_all()
devtools::test()
devtools::document()
devtools::run_examples()
library(atnPkg)
devtools::load_all()
devtools::test()
devtools::document()
devtools::document()
devtools::run_examples()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::test()
library(atnPkg)
devtools::load_all()
devtools::document()
library(atnPkg)
devtools::load_all()
devtools::document()
devtools::run_examples()
devtools::test()
devtools::document()
devtools::run_examples()
devtools::load_all()
devtools::document()
devtools::run_examples()
devtools::document()
devtools::document()
devtools::load_all()
rm(list = ls())
devtools::load_all()
export(airport_data)
devtools::load_all()
devtools::document
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::test()
library(atnPkg)
rm(list = ls())
install.packages('atnPkg_0.1.0.tar.gz',type = 'source', repos = NULL)
getwd()
install.packages('../atnPkg_0.1.0.tar.gz',type = 'source', repos = NULL)
packages()
installed.packages()[1:5,]
install.packages('../atnPkg_0.1.0.tar.gz',type = 'source', repos = /Users/gcampidilli/Library/R/3.6/library)
?install.packages
install.packages('../atnPkg_0.1.0.tar.gz',type = 'source', repos = NULL, lib = '/Users/gcampidilli/Library/R/3.6/library')
getwd()
library(atnPkg)
head(airport_data)
head(lonlat_usa)
?rnorm
rnorm(0.975, 0, 1)
qnorm(0.975, 0, 1)
getwd()
devtools::load_all()
head(redesign_A75)
dim(redesign_A75)
length(redesign_A75)
names(redesign_A75)
names(redesign_A75[1])
names(redesign_A75[[1]])
dim(redesign_A75[[2]])
length(redesign_A75[[2]])
dim(lonlat_usa)
dim(lonlat_usa)
devtools::load_all()
dim(lonlat_usa)
library(fields)
library(maps)
library(sp)
library(ggplot2)
redesign_A75_lonlat_proportions = data.frame(lon = lonlat_usa$lon, lat = lonlat_usa$lat, prop = redesign_A75[[2]])
dim(redesign_A75_lonlat_proportions)
head(redesign_A75_lonlat_proportions)
names(redesign_A75)
?quilt.plot
data( ozone2)
# plot 16 day of ozone data set
quilt.plot( ozone2$lon.lat, ozone2$y[16,])
US( add=TRUE, col="grey", lwd=2)
data( ozone2)
# plot 16 day of ozone data set
quilt.plot( ozone2$lon.lat, ozone2$y[16,])
US( add=TRUE, col="grey", lwd=2)
par( oma=c( 0,0,0,5)) # save some room for the legend
set.panel(2,2)
zr<- range( ozone2$y, na.rm=TRUE)
for( k in 1:4){
quilt.plot( ozone2$lon.lat, ozone2$y[15+k,], add.legend=FALSE,
zlim=zr, col=coltab, nx=40, ny=40)
US( add=TRUE)
}
par( oma=c(0,0,0,1))
image.plot(zlim=zr,legend.only=TRUE, col=coltab)
coltab<- two.colors( 256, middle="grey50" )
par( oma=c( 0,0,0,5)) # save some room for the legend
set.panel(2,2)
zr<- range( ozone2$y, na.rm=TRUE)
for( k in 1:4){
quilt.plot( ozone2$lon.lat, ozone2$y[15+k,], add.legend=FALSE,
zlim=zr, col=coltab, nx=40, ny=40)
US( add=TRUE)
}
par( oma=c(0,0,0,1))
image.plot(zlim=zr,legend.only=TRUE, col=coltab)
head(ozone2)
head(ozone2$y[15+k,])
class(ozone2)
tmp = vector('list', length = 2)
tmp[1] = lonlat_usa
tmp[[1]] = lonlat_usa
tmp[[2]] = redesign_A75[[2]]
names(tmp) = c('lonlat', 'prop')
quilt.plot(tmp$lonlat, tmp$prop)
US( add=TRUE, col="magenta", lwd=2)
par(mar=c(0,0,0,0))
quilt.plot(tmp$lonlat, tmp$prop)
US( add=TRUE, col="magenta", lwd=2)
par(mar=c(0,0,0,0))
quilt.plot(tmp$lonlat, tmp$prop)
US( add=TRUE, col="magenta", lwd=2)
return_lonlat_prop_list = function(redesign_list){
lonlat_prop = vector('list', length = 2)
lonlat_prop[[1]] = lonlat_usa
lonlat_prop[[2]] = redesign_list[[2]]
names(lonlat_prop) = c('lonlat', 'prop')
return(lonlat_prop)
}
redesign_A75_lonlat_proportions = return_lonlat_prop_list(redesign_A75)
head(redesign_A75_lonlat_proportions)
quilt.plot(redesign_A75_lonlat_proportions$lonlat, redesign_A75_lonlat_proportions$prop, main = 'tmp')
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_A75_lonlat_proportions$lonlat, redesign_A75_lonlat_proportions$prop, main = 'tmp')
# load all functions from within this package
library(atnPkg)
# load other packages
library(fields)
library(maps)
library(sp)
library(ggplot2)
# load airport_data
#load('airport_data.RData')
# Get unique airports ID
airports = airport_data$codes
n_airports = length(airports)
par(mar=c(0,0,0,0))
quilt.plot(redesign_A75_lonlat_proportions$lonlat, redesign_A75_lonlat_proportions$prop, main = 'tmp')
US( add=TRUE, col="magenta", lwd=2)
US( add=TRUE, col="white", lwd=2)
quilt.plot(redesign_A75_lonlat_proportions$lonlat, redesign_A75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable, Network A 75 miles')
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_A75_lonlat_proportions$lonlat, redesign_A75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 75 miles, Network A')
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_A100_lonlat_proportions$lonlat, redesign_A100_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 100 miles, Network A')
US( add=TRUE, col="magenta", lwd=2)
redesign_A100_lonlat_proportions = return_lonlat_prop_list(redesign_A100)
redesign_B75_lonlat_proportions = return_lonlat_prop_list(redesign_B75)
redesign_B100_lonlat_proportions = return_lonlat_prop_list(redesign_B100)
redesign_C75_lonlat_proportions = return_lonlat_prop_list(redesign_C75)
redesign_C100_lonlat_proportions = return_lonlat_prop_list(redesign_C100)
quilt.plot(redesign_A100_lonlat_proportions$lonlat, redesign_A100_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 100 miles, Network A')
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_A75_lonlat_proportions$lonlat, redesign_A75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 75 miles, Network A')
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_B75_lonlat_proportions$lonlat, redesign_B75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 75 miles, Network B')
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_B100_lonlat_proportions$lonlat, redesign_B75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 100 miles, Network B')
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_C75_lonlat_proportions$lonlat, redesign_B75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 75 miles, Network C')
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_C100_lonlat_proportions$lonlat, redesign_B75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 100 miles, Network C')
US( add=TRUE, col="magenta", lwd=2)
return_lonlat_prop_list = function(redesign_list){
lonlat_prop = vector('list', length = 2)
lonlat_prop[[1]] = lonlat_usa
lonlat_prop[[2]] = redesign_list[[2]]
names(lonlat_prop) = c('lonlat', 'prop')
return(lonlat_prop)
}
redesign_B75_lonlat_proportions = return_lonlat_prop_list(redesign_B75)
redesign_B100_lonlat_proportions = return_lonlat_prop_list(redesign_B100)
redesign_C75_lonlat_proportions = return_lonlat_prop_list(redesign_C75)
redesign_C100_lonlat_proportions = return_lonlat_prop_list(redesign_C100)
quilt.plot(redesign_B75_lonlat_proportions$lonlat, redesign_B75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 75 miles, Network B')
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_B100_lonlat_proportions$lonlat, redesign_B75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 100 miles, Network B')
US( add=TRUE, col="magenta", lwd=2)
head(redesign_B100_lonlat_proportions$prop)
head(redesign_B75_lonlat_proportions$prop)
head(redesign_C100_lonlat_proportions$prop)
head(redesign_C75_lonlat_proportions)
head(redesign_C75_lonlat_proportions$prop)
quilt.plot(redesign_C100_lonlat_proportions$lonlat, redesign_B75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 100 miles, Network C')
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_C100_lonlat_proportions$lonlat, redesign_B75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 100 miles, Network C')
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_B100_lonlat_proportions$lonlat, redesign_B100_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 100 miles, Network B')
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_C75_lonlat_proportions$lonlat, redesign_C75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 75 miles, Network C')
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_C100_lonlat_proportions$lonlat, redesign_C100_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 100 miles, Network C')
US( add=TRUE, col="magenta", lwd=2)
knitr::opts_chunk$set(echo = TRUE)
quilt.plot(redesign_A75_lonlat_proportions$lonlat, redesign_A75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 75 miles, Network A', cex.lab = 0.1)
redesign_A75_lonlat_proportions = return_lonlat_prop_list(redesign_A75)
redesign_A100_lonlat_proportions = return_lonlat_prop_list(redesign_A100)
redesign_B75_lonlat_proportions = return_lonlat_prop_list(redesign_B75)
redesign_B100_lonlat_proportions = return_lonlat_prop_list(redesign_B100)
redesign_C75_lonlat_proportions = return_lonlat_prop_list(redesign_C75)
redesign_C100_lonlat_proportions = return_lonlat_prop_list(redesign_C100)
# plot each redesigned network
quilt.plot(redesign_A75_lonlat_proportions$lonlat, redesign_A75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 75 miles, Network A', cex.lab = 0.1)
US( add=TRUE, col="magenta", lwd=2)
US( add=TRUE, col="magenta", lwd=2)
plot.new()
quilt.plot(redesign_A75_lonlat_proportions$lonlat, redesign_A75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 75 miles, Network A', cex.lab = 0.1)
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_A75_lonlat_proportions$lonlat, redesign_A75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 75 miles, Network A', cex.main = 0.5)
US( add=TRUE, col="magenta", lwd=2)
quilt.plot(redesign_A75_lonlat_proportions$lonlat, redesign_A75_lonlat_proportions$prop,
main = 'Proportion of Continental US Reachable by travelling 75 miles, Network A', cex.main = 0.75)
US( add=TRUE, col="magenta", lwd=2)
cat('Network A, r = 75 miles:', '\n', 'The mean proportion of gridpoints reachable in the continental US ')
cat('Network A, r = 75 miles:', '\n', 'The mean proportion of gridpoints reachable in the continental US ')
mean(redesign_A100[[2]])
mean(redesign_A100[[1])
mean(redesign_A100[[1]])
mean(redesign_A75[[2]])
report_mean_prop = function(redesign_obj){
return(cat('Network A, r = 75 miles:', '\n', 'The mean proportion of gridpoints reachable in the continental US is:', mean(redeisn_obj[[2]])))
}
report_mean_prop(redesign_A75)
report_mean_prop = function(redesign_obj){
return(cat('Network A, r = 75 miles:', '\n', 'The mean proportion of gridpoints reachable in the continental US is:', mean(redesign_obj[[2]])))
}
report_mean_prop(redesign_A75)
report_mean_prop(redesign_A75)
report_mean_prop(redesign_A100)
report_mean_prop(redesign_B75)
report_mean_prop(redesign_B100)
report_mean_prop(redesign_C75)
report_mean_prop(redesign_C100)
report_mean_prop = function(letter, r, redesign_obj){
return(cat('Network', letter, 'r =',r, 'miles:', '\n', 'The mean proportion of gridpoints reachable in the continental US is:', mean(redesign_obj[[2]])))
}
report_mean_prop('A', 75,redesign_A75)
report_mean_prop = function(letter, r, redesign_obj){
return(cat('Network', letter, ',r =',r, 'miles:', '\n', 'The mean proportion of gridpoints reachable in the continental US is:', mean(redesign_obj[[2]])))
}
report_mean_prop('A', 75,redesign_A75)
report_mean_prop = function(letter, r, redesign_obj){
return(cat('Network', letter, 'r =',r, 'miles:', '\n', 'The mean proportion of gridpoints reachable in the continental US is:', mean(redesign_obj[[2]])))
}
report_mean_prop('A', 75,redesign_A75)
report_mean_prop = function(letter, r, redesign_obj){
return(cat('Network', letter, 'r =',r, 'miles:', '\n', 'The mean proportion of gridpoints reachable in the continental US is:', mean(redesign_obj[[2]])))
}
report_mean_prop('A', 75, redesign_A75)
report_mean_prop('A', 100, redesign_A100)
report_mean_prop('B', 75, redesign_B75)
report_mean_prop('B', 100, redesign_B100)
report_mean_prop('C', 75, redesign_C75)
report_mean_prop('C', 100,redesign_C100)
airports_nearby(data.frame(lon=-75.5019,lat = 42.444), lonlat_usa, x = 15)
airports_nearby(data.frame(lon=-75.5019,lat = 42.444), 'ith', lonlat_usa, rownames(lonlat_usa),x = 15)
airports_nearby(data.frame(lon=-75.5019,lat = 42.444), 'ith', lonlat_usa, rownames(lonlat_usa),x = 5)
airports_nearby(data.frame(lon=-75.5019,lat = 42.444), 'ith', lonlat_usa, rownames(lonlat_usa),x = 10)
airports_nearby(data.frame(lon=-75.5019,lat = 42.444), 'ith', lonlat_usa, rownames(lonlat_usa),x = 13)
airports_nearby(data.frame(lon=-75.5019,lat = 42.444), 'ith', lonlat_usa, rownames(lonlat_usa),x = 12)
airports_nearby(data.frame(lon=-75.5019,lat = 42.444), 'ith', lonlat_usa, rownames(lonlat_usa),x = 12)
airports_nearby(data.frame(lon=-75.5019,lat = 42.444), 'ith', lonlat_usa, rownames(lonlat_usa),x = 11)
# dim(airport_data)
dim(airport_data)
head(airport_data)
dim(lonlat_usa)
head(direct_from)
names(direct_from)
length(direct_from)
check_symmetric(direct_from)
check_symmetric(direct_from)$symm == TRUE
output = check_symmetric(direct_from)
output$conn
class(output$conn)
matrix(nrow=1,ncol=2)
output$conn == matrix(nrow=1,ncol=2)
vector(length=2) == output$conn
is.equal(vector(length=2),output$conn)
all.equal(vector(length=2),output$conn)
NULL == output$conn
output$conn == length(0)
length(output$conn) == 0
devtools::load_all()
devtools::document()
devtools::document()
?distfun
?airports_nearby
?distfun
devtools::load_all()
devtools::document()
?distfun
?airports_nearby
library(atnPkg)
devtools::load_all()
devtools::document()
devtools::run_examples()
devtools::load_all()
devtools::document()
?dplyr
vignette(dplyr)
vignette('dplyr')
devtools::load_all()
devtools::document()
devtools::test()
rm(redesign_A75)
head(redesign_A75)
rm(redesign_A75)
rm(redesign_A75, redesign_A100)
ls
list=ls()
devtools::load_all()
load('inst/scripts/redesign_A75.RData')
getwd()
load('aknPkg/inst/scripts/redesign_A75.RData')
load(file='/inst/scripts/redesign_A75.RData')
rm(list=ls())
getwd()
load('/Users/gcampidilli/Documents/GitHub/air-travel-network/atnPkg/inst/scripts/redesign_A75.RData')
rm(redesign_A75)
load('./inst/scripts/redesign_A75.RData')
getwd()
load('inst/scripts/redesign_A75.RData')
load("inst/scripts/redesign_A75.RData")
getwd()
devtools::load_all()
load("inst/extdata/redesign_A75.RData")
load("R/redesign_A75.RData")
rm(list=ls())
devtools::load_all()
load(./R/redesign_A75.RData)
load('./R/redesign_A75.RData')
rm(list=ls())
devtools::load_all()
load('./R/internal_data_objects/redesign_A75.RData')
?dir
dir(path = './R/internal_data_objects'')
""
''
dir(path = './R/internal_data_objects')
file_names = as.list(dir(path = './R/internal_data_objects'))
lapply(file_names,load,.GlobalEnv)
for(i in 1:length(file_names)) load(file_names[[i]])
i
length(file_names)
file_names = as.list(dir(path = './R/internal_data_objects'))
length(file_names)
file_names = dir(path = './R/internal_data_objects')
file_names
dir(path = './R/internal_data_objects')
tmp = dir(path = './R/internal_data_objects')
tmp
rm(file_names)
file_names = dir(path = './R/internal_data_objects')
for(i in 1:length(file_names)) load(file_names[i])
load("R/internal_data_objects/
"airports_within_100.RData"
rm(list = ls())
load("R/internal_data_objects/airport_grid_point_list_75.RData")
load("./R/internal_data_objects/airport_grid_point_list_75.RData")
load("R/internal_data_objects/airports_within_100.RData")
load("R/internal_data_objects/airports_within_75.RData")
getwd()
load("R/internal_data_objects/airport_grid_point_list_75.RData")
load("R/airport_grid_point_list_75.RData")
rm(list = ls())
load("R/airport_grid_point_list_75.RData")
load("airport_grid_point_list_75.RData")
# load all functions from within this package
library(atnPkg)
# load external packages
library(fields)
library(maps)
library(sp)
library(ggplot2)
# Get unique airports ID
airports = airport_data$codes
n_airports = length(airports)
load("/Users/gcampidilli/Documents/GitHub/air-travel-network/atnPkg/R/internal_data_objectsairport_grid_point_list_75.RData")
devtools::load_all()
load("/Users/gcampidilli/Documents/GitHub/air-travel-network/atnPkg/R/internal_data_objectsairport_grid_point_list_75.RData")
# construction of these network objects is in inst/scripts/
load('/Users/gcampidilli/Documents/GitHub/air-travel-network/atnPkg/R/internal_data_objectsredesign_A75.RData')
devtools::load_all()
devtools::test()
devtools::document()
head(redesign_A75$direct_from)
direct_from_a_75 = redesign_A75$direct_from
direct_from_a_100 = redesign_A100$direct_from
direct_from_b_75 = redesign_B75$direct_from
direct_from_b_100 = redesign_B100$direct_from
direct_from_c_75 = redesign_C75$direct_from
direct_from_c_100 = redesign_C100$direct_from
save(direct_from_a_75, file = 'data/direct_from_a_75.RData')
save(direct_from_a_100, file = 'data/direct_from_a_100.RData')
save(direct_from_b_75, file = 'data/direct_from_b_75.RData')
save(direct_from_b_100, file = 'data/direct_from_b_100.RData')
save(direct_from_c_75, file = 'data/direct_from_c_75.RData')
save(direct_from_c_100, file = 'data/direct_from_c_100.RData')
devtools::load_all()
devtools::test()
devtools::document()
library(atnPkg)
devtools::load_all()
devtools::test()
devtools::document()
library(atnPkg)
devtools::load_all()
devtools::test()
devtools::document()
library(atnPkg)
installed.packages()
head(installed.packages())
?install.package
?install.packages
install.packages('./atnPkg_0.1.0.tar.gz', lib = 'Library/Frameworks/R.framework/Versions/4.1/Resources/library', repos = NULL)
install.packages('./atnPkg_0.1.0.tar.gz', lib = '/Users/gcampidilli/Library/R/3.6/library', repos = NULL)
install.packages(pkgs='./atnPkg_0.1.0.tar.gz', lib = '/Users/gcampidilli/Library/R/3.6/library', repos = NULL)
install.packages(pkgs='atnPkg_0.1.0.tar.gz', lib = '/Users/gcampidilli/Library/R/3.6/library', repos = NULL)
getwd()
install.packages(pkgs='../atnPkg_0.1.0.tar.gz', lib = '/Users/gcampidilli/Library/R/3.6/library', repos = NULL)
vignette(atnPkg)
vignette('atnPkg')
library(atnPkg)
vignette('atnPkg')
vignette(atnPkg)
head(airport_data)
airports_nearby(airport_data[1,c(2:3)], 'ABE', airport_data[,c(2:3)], airport_data[,c(1)])
check_symmetric(direct_from_a_75)
check_symmetric(direct_from_c_75)
r.version()
R.version
getwd()
install.packages(pkgs='../atnPkg_0.1.0.tar.gz', lib = '/Users/gcampidilli/Library/R/3.6/library', repos = NULL)
head(airport_data)
library(atnPkg)
head(airport_data)
getwd()
install.packages(pkgs = '../atnPkg_0.1.0.tar.gz', lib = '/Users/gcampidilli/Library/R/3.6/library', repos = NULL)
LIBRARY(ATNPKG)
library(atnPkg)
head(atnPkg)
head(airport_data)
getwd()
setwd = '/Users/gcampidilli/Desktop/tmp'
getwd()
setwd(setwd)
getwd()
dat = read.csv('DRP.csv', header = T)
View(dat)
?t.test
colnames(dat)
t.test(Degree.of.Reading.Power ~ group, data = dat)
install.packages('psych')
library(psych)
cohen.d(dat)
cohen.d(dat, group = group)
cohen.d(dat, group = dat$group)
?cohen.d
cohen.d.by(dat, group, Degree.of.Reading.Power)
cohen.d.by(dat, group=group, group2=Degree.of.Reading.Power)
cohen.d.by(dat, group=dat$group, group2=dat$Degree.of.Reading.Power)
cohen.d.by(dat, group=dat$Degree.of.Reading.Power)
cohen.d(dat, group=dat$Degree.of.Reading.Power)
